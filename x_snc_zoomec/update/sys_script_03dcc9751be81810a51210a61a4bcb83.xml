<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_zoomec_meeting_mentions</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_zoomec_meeting_mentions">sentiment_scoreISEMPTY^transcript_substringISNOTEMPTY^EQ<item endquery="false" field="sentiment_score" goto="false" newquery="false" operator="ISEMPTY" or="false" value=""/>
            <item endquery="false" field="transcript_substring" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>EC Sentiment Analysis</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var transcstr = current.transcript_substring.toString();
	//gs.info('Crisp Sys ID ' + current.sys_id + ' str ' + current.transcript_substring.toString());
	//Pass to API and recieve result, parse to json and grab score
	var crispySent = new CrispySentiment();
	var result = crispySent.returnSentimentScore(transcstr);
	var json = new global.JSON().encode(result);
	var sscore = new global.JSON().decode(json);
    //GR Creation
	var gr = new GlideRecord("x_snc_zoomec_meeting_mentions");
	gr.addQuery("sys_id", current.sys_id);
	gr.query();
	if (gr.next()) {
		gr.sentiment_score = parseFloat(sscore.score);
		gr.update(); 
	}



})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>steele</sys_created_by>
        <sys_created_on>2020-05-03 19:52:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>03dcc9751be81810a51210a61a4bcb83</sys_id>
        <sys_mod_count>43</sys_mod_count>
        <sys_name>EC Sentiment Analysis</sys_name>
        <sys_overrides/>
        <sys_package display_value="ZoomEC" source="x_snc_zoomec">8255ef051b689410a51210a61a4bcbff</sys_package>
        <sys_policy/>
        <sys_scope display_value="ZoomEC">8255ef051b689410a51210a61a4bcbff</sys_scope>
        <sys_update_name>sys_script_03dcc9751be81810a51210a61a4bcb83</sys_update_name>
        <sys_updated_by>steele</sys_updated_by>
        <sys_updated_on>2020-05-03 23:22:36</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=03dcc9751be81810a51210a61a4bcb83"/>
</record_update>
